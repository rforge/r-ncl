%\VignetteIndexEntry{solutions2}
%!Snw weave = knitr
%\VignetteEngine{knitr::knitr}
<<echo=FALSE>>=
results = "hide"; echo = FALSE
@
\documentclass[a4paper,justified,openany]{tufte-handout}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
options(replace.assign=FALSE,width=50)

opts_chunk$set(fig.path='figure/graphics-', 
               cache.path='cache/graphics-', 
               fig.align='center', 
               dev='pdf', fig.width=5, fig.height=5, 
               fig.show='hold', cache=FALSE, par=TRUE)
knit_hooks$set(crop=hook_pdfcrop)

knit_hooks$set(par=function(before, options, envir){
  if (before && options$fig.show!='none') {
    par(mar=c(3,3,2,1),cex.lab=.95,cex.axis=.9,
        mgp=c(2,.7,0),tcl=-.01, las=1)
  }}, crop=hook_pdfcrop)
@
\usepackage{amsmath}

% Set up the images/graphics package
\usepackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\graphicspath{{graphics/}}

\title{Introduction to R: practical 2 \Sexpr{ifelse(echo, "solutions", "")}}
\author[Dr Colin Gillespie]{Dr Colin S.
Gillespie}
\date{}  % if the \date{} command is left out, the current date will be used

% The following package makes prettier tables.  We're all about the bling!
\usepackage{booktabs}

% The units package provides nice, non-stacked fractions and better spacing
% for units.
\usepackage{units}

% The fancyvrb package lets us customize the formatting of verbatim
% environments.  We use a slightly smaller font.
\usepackage{fancyvrb}
\fvset{fontsize=\normalsize}
\newcommand{\cc}{\texttt}
\graphicspath{{../graphics/}}
\setcounter{secnumdepth}{2}

\usepackage{microtype}
\begin{document}

\maketitle% this prints the handout title, author, and date

\begin{abstract}
\noindent Often when we commence an analysis we want to partition the data in
different ways. For example, selecting data points greater than a particular
value. In this practical we will investigate how this is done using R's
logical operators.

If you have your own data set, try the questions below, then load your own
data.
\end{abstract}

\section*{Question difficulty}

Some of the questions below are straight forward, others are bit more tricky.
\begin{itemize}
\item The last sub-questions of Q1 and Q2  are hard.
\end{itemize}
Before starting the practical, run the {following commands:

<<>>=
library("nclRintroduction")
@ 

\subsection*{Question 1}

Run the following R code

<<>>=
x1 = GetNumericVector()
@ 

\begin{enumerate}
\item What is length of \cc{x1}?
<<echo=echo, results=results>>=
length(x1)
@

\item What is the 55$^{{\tiny \text{th}}}$ element of \cc{x1}?
<<echo=echo, results=results>>=
x1[55]
@

\item What is the final element of \cc{x1}?
<<echo=echo, results=results>>=
x1[length(x1)]
@

\item What is the mean value of \cc{x1}?
<<echo=echo, results=results>>=
mean(x1)
@

\item What is the smallest value of \cc{x1}?
<<echo=echo, results=results>>=
min(x1)
@

\item How many values are greater than the first quartile but less than the median?
<<echo=echo, results=results>>=
q1 = quantile(x1)[2]
med = median(x1)
length(x1[x1 > q1 & x1 < med])
##Or
sum(x1 > q1 & x1 < med)
@

\item How many values are greater than the $\bar x_1 + 2 sd(x_1)$, where $sd$ is
the sample standard deviation?\marginnote{$\bar x_1$ is the mean value and
$sd(x_1)$ is the standard deviation of $x_1$.}
<<echo=echo, results=results>>=
length(x1[x1 > (mean(x1) + 2*sd(x1))])
##Or
sum(x1 > (mean(x1) + 2*sd(x1)))
@

\item What is the 50$^{{\tiny \text{th}}}$ smallest value in
\cc{x1}?
<<echo=echo, results=results>>=
sort(x1)[50]
@

\end{enumerate}

% \subsection*{Question 2}

% Run the following R code


% \begin{enumerate}
% \item How many times does \cc{TRUE} appear in \cc{x2}?
% \item What is the position in the vector of the last occurrence of
%   \cc{TRUE}? \sidenote{Look at the help file: \cc{?which}}
% \item What is the value of the 500$^{\text{{\tiny th}}}$ element of \cc{x2}?
% \item \textbf{Tricky:} What position in the vector is the 246$^{\text{{\tiny
%         th}}}$ occurrence of \cc{TRUE}.
% \end{enumerate}


\subsection*{Question 2}

Run the following R code

<<>>=
y = GetDataFrame()
@ 

\noindent The data frame \cc{y} is a subset of the movie data we use in the
lectures.
\begin{enumerate}
\item How many rows does \cc{y} have?
<<echo=echo, results=results>>=
dim(y)[1]
## Or
nrow(y)
@

\item How many columns does \cc{y} have?
<<echo=echo, results=results>>=
dim(y)[2]
## Or
ncol(y)
@

\item How many movies are there where budget is known, i.e. where \cc{Budget $!= -1$}?
<<echo=echo, results=results>>=
nrow(y[y$Budget != -1,])
##Or
sum(y$Budget != -1)
@

\item How many movies are there where the rating is less than 2.5 or greater
than 7.5 (not including 2.5 and 7.5)? How would you include the values 2.5 and
7.5 in your condition?
<<echo=echo, results=results>>=
nrow(y[y$Rating < 2.5 | y$Rating > 7.5,])
##
sum(y$Rating < 2.5 | y$Rating > 7.5)
@

\item How many movies are there where the length is greater than 120 and have a
rating of more than 7.5 - (not including 120 and 7.5)?
<<echo=echo, results=results>>=
nrow(y[y$Length > 120 & y$Rating > 7.5,])
##Or
sum(y$Length > 120 & y$Rating > 7.5)
@

\item How many movies were made in 1980 and have a rating above 5.0?
<<echo=echo, results=results>>=
nrow(y[y$Year == 1980 & y$Rating > 5.0,])
##Or
sum(y$Year == 1980 & y$Rating > 5.0)
@
\item How many movies are classified as Action?
<<echo=echo, results=results>>=
sum(y$Action)
@

\item How many movies were classified as both Action and Animation?
<<echo=echo, results=results>>=
sum(y$Action == 1 & y$Animation == 1)
@
\end{enumerate}


\subsection*{Question 3}

Run the following R code

<<>>=
x2 = GetCharacterVector()
@ 

\noindent In the following questions, the function \cc{table} is quite useful.
\begin{enumerate}
\item How many times does ``A'' appear in \cc{x2}?
<<echo=echo, results=results>>=
length(x2[x2=="A"])
##Or
sum(x2=="A")
@
\item Which letter appears the least? If more than one letter appears, just give
the first letter (if the letters were sorted in alphabetical order).
<<echo=echo, results=results>>=
sort(table(x2))[1]
@

\item \textbf{Very tricky:} How many pairs of letters are there in
\cc{x2}.\sidenote{For example, in \cc{AABCCC} we would have 3 pairs: \cc{AA},
\cc{CC} and \cc{CC}.}

<<echo=echo, results=results>>=
l = length(x2)
x2_a = x2[1:(l-1)]; x2_b = x2[2:l];
sum(x2_a == x2_b) 
@

\end{enumerate}



\section*{Solutions}

Solutions are contained within this package:
<<eval=FALSE>>=
library(nclRintroduction)
vignette("solutions2", package="nclRintroduction")
@


\end{document}
