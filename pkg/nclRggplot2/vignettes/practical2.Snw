%\VignetteIndexEntry{practical2}
%!Snw weave = knitr
%\VignetteEngine{knitr::knitr}
\documentclass[a4paper,justified,openany]{tufte-handout}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
options(replace.assign=FALSE,width=50)

opts_chunk$set(fig.path='knitr_figure/graphics-', 
               cache.path='knitr_cache/graphics-', 
               fig.align='center', 
               dev='pdf', fig.width=5, fig.height=5, 
               fig.show='hold', cache=FALSE, par=TRUE)
knit_hooks$set(crop=hook_pdfcrop)

knit_hooks$set(par=function(before, options, envir){
    if (before && options$fig.show!='none') {
        par(mar=c(3,3,2,1),cex.lab=.95,cex.axis=.9,
            mgp=c(2,.7,0),tcl=-.01, las=1)
}}, crop=hook_pdfcrop)
@
<<echo=FALSE>>=
#knit_theme$set("bw.css")
@

%\geometry{showframe}% for debugging purposes -- displays the margins
\usepackage{amsmath}

% Set up the images/graphics package
\usepackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\graphicspath{{graphics/}}

\title{ggplot2: practical 2} 
\author[Dr Colin Gillespie]{Dr Colin S.
  Gillespie}
\date{}  % if the \date{} command is left out, the current date will be used

% The following package makes prettier tables.  We're all about the bling!
\usepackage{booktabs}

% The units package provides nice, non-stacked fractions and better spacing
% for units.
\usepackage{units}

% The fancyvrb package lets us customize the formatting of verbatim
% environments.  We use a slightly smaller font.
\usepackage{fancyvrb}
%\fvset{fontsize=\normalsize}
\newcommand{\cc}{\texttt}
\graphicspath{{../graphics/}}
\setcounter{secnumdepth}{2}
\usepackage{microtype}

\begin{document}
\maketitle% this prints the handout title, author, and date

\begin{abstract}
  \noindent This practical aims to guide you through some of the key ideas in
  \mbox{\cc{ggplot2}}. As with the first practical, feel free to experiment.
  Some of the functions introduced in this practical haven't been explicitly
  covered in the notes. Use the built-in R help or the \cc{ggplot2} help pages
  at\linebreak[4] \mbox{\url{http://had.co.nz/ggplot2/}} as needed.
\end{abstract}

\section{Introduction}

To begin, load the library:

<<>>=
library(ggplot2) 
@ 

\noindent and the \cc{mpg} data set

<<results='hide'>>=
data(mpg)
dim(mpg)
@ 
<<F1, echo=FALSE, message=FALSE, cache=TRUE, fig.keep='none',results='hide'>>=
data(mpg)
# mpg$drv = as.character(mpg$drv)
# mpg[mpg$drv == "f",]$drv = "Front"
# mpg[mpg$drv == "r",]$drv = "Rear"
# mpg[mpg$drv == "4",]$drv = "4wd"
# mpg$drv = factor(mpg$drv, 
#    levels = c("Front", "Rear", "4wd"))

g = ggplot(data=mpg, aes(x=displ, y=hwy)) + 
  xlab("Displacement") + ylab("Highway mpg")
g1 = g + geom_point() + stat_smooth(linetype=2)
g2 = g1 + geom_point(data=subset(mpg, manufacturer=="audi"), 
   aes(x=displ, y=hwy), 
  colour="red", size=4, alpha=0.4)
g3 = g + geom_point() + stat_smooth(aes(colour=drv)) + 
  theme(legend.position = "top")
@ 



\begin{marginfigure}
  \centering
<<dev='png', out.width='\\textwidth', echo=FALSE, message=FALSE>>=
g1
@
 \caption{Graphics for section 1.}\label{F1}
\end{marginfigure}


\section{Basic plots}

The aim of this section is to recreate the graphics in figure \ref{F1}. Feel
free to experiment.
\begin{enumerate}
\item Figure \ref{F1}: Create a scatter plot of engine displacement,
  \cc{displ}, against highway mpg, \cc{hwy}. To get started:
  
<<fig.keep='none'>>=
ggplot(data=mpg, aes(x=displ, y=hwy)) +  
  geom_point() 
@  

Now add a dashed loess line and change the axis labels. Hint: try
\cc{stat\_smooth} and \cc{xlab(`New label')}.
\begin{marginfigure}
  \centering
<<dev='png', out.width='\\textwidth', echo=FALSE, message=FALSE>>=
g2
@
\caption{Graphics for section 1.}\label{F2}
\end{marginfigure}
\item Figure \ref{F2}: highlight the Audi cars with a slightly larger red
  circle. Hint: Create a new data frame that only contains Audi cars and use an additional \cc{geom\_point} layer.
\item Figure \ref{F3}: Using \cc{stat\_smooth}, add a loess line conditional
  on the drive. Hint: to move the legend to the top use 
<<eval=FALSE, tidy=FALSE>>=
 + theme(legend.position = "top")
@
\begin{marginfigure}
  \centering
<<dev='png', out.width='\\textwidth', echo=FALSE, message=FALSE>>=
g3
@
 \caption{Graphics for section 1.}\label{F3}
\end{marginfigure}

\end{enumerate}


\clearpage


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Over plotting}\label{Over}

Scatter plots are very useful. However, when we have a large data set, points
will be plotted on top of each other obscuring the relationship. We call this
problem over plotting. There are a few techniques we can use to help, although
the best solution is often problem specific.

To begin with we will create an example data frame:

<<overplotting, cache=TRUE, tidy=FALSE, echo=1:7>>=
##If your computer is slow when plotting
##reduce the value of n
n = 20000
x1 = signif(matrix(rnorm(n), ncol=2), 2)
x2 = signif(matrix(
  rnorm(n, mean=3, sd=1.5), ncol=2), 2)
x = rbind(x1, x2)
df = data.frame(x=x[,1], y=x[,2])
h= ggplot(df) + geom_point(aes(x, y))
@

\begin{marginfigure}
  \centering
<<echo=FALSE>>=
h
@
  \caption{A scatter plot that suffers from over plotting.}\label{F4}
\end{marginfigure}

\noindent We can create a simple scatter plot of this data using the following commands:

<<echo=8>>=
<<overplotting>>
@ 

\noindent This plot isn't particularly good. Try to improve it by using a
combination of:

\begin{itemize}
\item changing the transparency level: \cc{alpha};
\item change the shape: \cc{shape=1} and \cc{shape=`.'}
\item use some jittering - \cc{geom\_jitter}.
\item adding a contour to the plot using \cc{stat\_density2d}.
\item What does

<<cache=TRUE, fig.keep='none', tidy=FALSE>>=
h +  stat_density2d(aes(x,y, fill=..density..),
                contour=FALSE, geom="tile")
@ 
  
do?
\item What does \cc{stat\_bin2d()} and \cc{stat\_binhex()} do\sidenote{To use
    \cc{stat\_binhex} you may need to install the \cc{hexbin} package.} - add it to the
  plot to find out! Try varying the parameters \cc{bins} and \cc{binwidth}.
\end{itemize}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 4
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Displaying distributions}

The diamonds data set contains the prices and other attributes of almost 54,000
diamonds. It is a data frame with 53,940 rows and 10 variables. First, load the
diamonds data set:

<<>>=
data(diamonds)
@ 

\noindent and look at the help file:

<<tidy=FALSE>>=
?diamonds
@


\noindent We can construct a histogram of diamond depth using the following commands:

<<fig.keep='none', message=FALSE>>=
i1 = ggplot(data=diamonds) + 
  geom_histogram(aes(x=depth))
@ 
\begin{marginfigure}
  \centering
<<echo=FALSE, message=FALSE>>=
i1
@
  \caption{Histogram of the diamond data set.}\label{F5}
\end{marginfigure}

\noindent to get figure \ref{F5}. Let's experiment a bit.
\begin{enumerate}
\item Change the \cc{binwidth} in the \cc{geom\_histogram}. What value do you
  think is best?
\item What happens when you set \cc{colour=cut} in the \cc{geom\_histogram}
  aesthetic? What other options can you change?\sidenote{Look at the
    \cc{geom\_histogram} help page: \url{http://had.co.nz/ggplot2/geom_histogram.html}}
\item Try \cc{geom\_density}. Set \cc{fill=cut} and change the \cc{alpha} value.
\item Try \cc{geom\_boxplot}.
\end{enumerate}


\section*{Solutions}

Solutions are contained within this package:
<<eval=FALSE>>=
library(nclRggplot2)
vignette("solutions2", package="nclRggplot2")
@
\end{document}
